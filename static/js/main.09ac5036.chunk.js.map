{"version":3,"sources":["const.js","Cells.js","GameOver.js","PointScore.js","gameStarter.js","Game.js","index.js"],"names":["KEYS","DIRS","37","38","39","40","Cells","board","handleKey","cells","row","col","key","value","className","push","style","width","COLS","height","ROWS","tabIndex","onKeyDown","GameOver","props","onClick","start","PointScore","points","maxPoints","GameStarter","Game","event","direction","nativeEvent","keyCode","diff","Math","abs","state","nextDirection","snake","gameOver","speed","gameStarted","bind","frame","this","setState","head","getNextIndex","food","length","indexOf","i","floor","random","pop","unshift","setTimeout","x","y","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ac5036.chunk.js","sourcesContent":["export const ROWS =20, COLS =20, CELL = 30;\r\nexport const BODY = 1, FOOD = 2;\r\nexport const START = 44;\r\nexport const KEYS = {left: 37, up: 38, right: 39, down: 40};\r\nexport const DIRS = {37: true, 38: true, 39: true, 40: true};","import React from 'react';\r\nimport {ROWS, COLS, CELL, BODY, FOOD} from './const';\r\nimport \"./style.css\";\r\n\r\nfunction Cells ({board, handleKey}) {\r\n    const cells = [];\r\n\r\n    for(let row = 0; row < ROWS; row++){\r\n        for(let col = 0; col <COLS; col++){\r\n            const key = COLS * row + col\r\n            const value = board[key]\r\n            const className = value === BODY ? 'body-cell': value === FOOD ? 'food-cell' : 'cell'\r\n            cells.push(<div key={key} className={className}></div>)\r\n        }\r\n    }\r\n    return(\r\n        <div\r\n        style = {{width: COLS *CELL, height: ROWS * CELL}}\r\n        tabIndex={0}\r\n        onKeyDown={handleKey}\r\n        className='board'>\r\n            {cells}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cells;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst GameOver = (props) => {\r\n    return ( \r\n        <div className='gameStarter'>\r\n            <h2>Game Over</h2>\r\n            <button onClick={props.start}>Play again</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameOver;\r\n","import React from 'react';\r\n\r\nconst PointScore = (props) => {\r\n    return (  \r\n        <div className=\"pointScore\">\r\n            <div className='gameName'>\r\n                <div className=\"b s\"></div>\r\n                <div className=\"b s0\"></div>\r\n                <div className=\"b s1\"></div>\r\n                <div className=\"b s2\"></div>\r\n                <div className=\"b s3\"></div>\r\n                <div className=\"b s4\"></div>\r\n                <div className=\"b s5\"></div>\r\n                <div className=\"b n\"></div>\r\n                <div className=\"b n0\"></div>\r\n                <div className=\"b n1\"></div>\r\n                <div className=\"b n2\"></div>\r\n                <div className=\"b n3\"></div>\r\n                <div className=\"b n4\"></div>\r\n                <div className=\"b a\"></div>\r\n                <div className=\"b a0\"></div>\r\n                <div className=\"b a1\"></div>\r\n                <div className=\"b a2\"></div>\r\n                <div className=\"b a3\"></div>\r\n                <div className=\"b a4\"></div>\r\n                <div className=\"b k\"></div>\r\n                <div className=\"b k0\"></div>\r\n                <div className=\"b k1\"></div>\r\n                <div className=\"b k2\"></div>\r\n                <div className=\"b k3\"></div>\r\n                <div className=\"b k4\"></div>\r\n                <div className=\"b k5\"></div>\r\n                <div className=\"b k6\"></div>\r\n                <div className=\"b e\"></div>\r\n                <div className=\"b e0\"></div>\r\n                <div className=\"b e1\"></div>\r\n                <div className=\"b e2\"></div>\r\n\r\n\r\n                \r\n            </div>\r\n            <div className='score'>\r\n            <p>Your score: \r\n            <br/>\r\n            <span>{props.points}</span> \r\n            <br/> <br/>\r\n            Highest score: \r\n            <br/>\r\n            <span>{props.maxPoints}</span></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default PointScore;","import React from 'react';\r\n\r\nconst GameStarter = (props) => {\r\n    return ( \r\n        <div className=\"gameOver\">\r\n            <button\r\n            onClick={props.start}\r\n            >Start game</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameStarter;","import React, {Component} from 'react';\r\nimport Cells from './Cells';\r\nimport GameOver from './GameOver';\r\nimport PointScore from './PointScore';\r\nimport GameStarter from './gameStarter';\r\nimport {START, BODY, FOOD, KEYS, COLS, ROWS, DIRS} from './const';\r\nimport \"./style.css\";\r\n\r\nclass Game extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            board: [],\r\n            snake: [],\r\n            direction: null,\r\n            gameOver: false,\r\n            speed: 2.5,\r\n            points: -1,\r\n            maxPoints: 0,\r\n            gameStarted: false\r\n        };\r\n\r\n        this.start = this.start.bind(this)\r\n        this.frame = this.frame.bind(this)\r\n        this.handleKey = this.handleKey\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.start()\r\n    // }\r\n\r\n    gameStarted (){\r\n        this.setState({\r\n            gameStarted: true\r\n        })\r\n    }\r\n\r\n    start () {\r\n        const board = [];\r\n        \r\n        const snake = [START];\r\n\r\n        board[START] = BODY;\r\n\r\n        this.gameStarted()\r\n\r\n        this.setState({\r\n            board,\r\n            snake,\r\n            direction: KEYS.right,\r\n            gameOver: false,\r\n            points: -1,\r\n            speed: 2.5\r\n        }, () => {\r\n            this.frame();\r\n        })\r\n    }\r\n\r\n    frame(){\r\n        let {snake, board, direction} = this.state;\r\n\r\n        const head = this.getNextIndex(snake[0], direction)\r\n\r\n        const food = board[head] === FOOD || snake.length === 1\r\n\r\n        if(snake.indexOf(head) !== -1) {\r\n            this.setState({gameOver: true})\r\n\r\n            return\r\n        }\r\n\r\n        if(food) {\r\n            const maxCells = ROWS * COLS\r\n\r\n            let i;\r\n\r\n            do {\r\n                i = Math.floor(Math.random() * maxCells)\r\n            } while(board[i])\r\n\r\n            board[i] = FOOD\r\n\r\n            this.setState({\r\n                speed: this.state.speed + 0.1,\r\n                points: this.state.points + 1\r\n            })\r\n            if(this.state.points > this.state.maxPoints){\r\n                this.setState({\r\n                    maxPoints: this.state.points\r\n                })\r\n            }\r\n        }else{\r\n            board[snake.pop()] = null;\r\n        }\r\n\r\n        board[head] = BODY;\r\n        snake.unshift(head)\r\n\r\n        if(this.nextDirection){\r\n            direction = this.nextDirection\r\n            this.nextDirection = null\r\n        }\r\n\r\n        this.setState({\r\n            board,\r\n            snake,\r\n            direction\r\n        }, () => {\r\n            setTimeout(this.frame,1000/this.state.speed)\r\n        })\r\n    }\r\n\r\n    handleKey = (event) => {\r\n        const direction = event.nativeEvent.keyCode\r\n\r\n        const diff = Math.abs(this.state.direction - direction)\r\n\r\n        if(DIRS[direction] && diff !== 0 && diff !== 2){\r\n            this.nextDirection = direction\r\n        }\r\n    }\r\n\r\n    getNextIndex(head, direction) {\r\n        let x = head % COLS;\r\n        let y = Math.floor(head / COLS);\r\n\r\n        switch(direction){\r\n            case KEYS.up: y = y <= 0 ? ROWS - 1 : y - 1; break;\r\n            case KEYS.down: y = y>=ROWS ? 0 : y +1; break;\r\n            case KEYS.left: x = x<=0 ? COLS - 1: x - 1; break;\r\n            case KEYS.right: x = x >= COLS - 1 ? 0 : x +1; break;\r\n            default: return;\r\n        }\r\n\r\n        return (COLS * y) + x;\r\n    }\r\n\r\n    render(){\r\n        const {board} = this.state\r\n        return(\r\n            <div className=\"game\">\r\n            <PointScore points={this.state.points} maxPoints={this.state.maxPoints}/>\r\n            <Cells\r\n            handleKey={this.handleKey} \r\n            board={board}\r\n            />\r\n            {this.state.gameOver ?<GameOver start={this.start}/> : null}\r\n            {this.state.gameStarted ? null : <GameStarter start={this.start}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}